/**
 * AntiMalwareTransport.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.trendmicro.webserviceclient.generated;

public class AntiMalwareTransport  extends com.trendmicro.webserviceclient.generated.ConfigurationTransport  implements java.io.Serializable {
    private boolean alert;

    private java.lang.Integer excludeScanDirectoryListID;

    private java.lang.Integer excludeScanFileExtListID;

    private java.lang.Integer excludeScanFileListID;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareFilesToScan fileToScan;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction firstScanAction;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareFoldersToScan folderToScan;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanAction scanAction;

    private boolean intelliTrapEnabled;

    private boolean scanCompressed;

    private java.lang.Integer scanCompressedLayer;

    private java.lang.Integer scanCompressedSmaller;

    private java.lang.Integer scanCompressedNumberOfFiles;

    private java.lang.Integer scanDirList;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanFilesActivity scanFilesActivity;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction secondScanAction;

    private java.lang.Integer toScanFileExtListID;

    private boolean spywareEnabled;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanCustomActionForGeneric;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction unScannableFileAction;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareConfigType configurationType;

    private boolean scanNetworkFolder;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareCpuUsage cpuUsage;

    private boolean scanOLE;

    private boolean scanOLEExploit;

    private java.lang.Integer scanOLELayer;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForVirus;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForTrojans;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForPacker;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForSpyware;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForOtherThreats;

    private com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForCookie;

    private java.lang.Integer excludeScanProcessFileListID;

    public AntiMalwareTransport() {
    }

    public AntiMalwareTransport(
           java.lang.Integer ID,
           java.lang.String description,
           java.lang.String name,
           boolean alert,
           java.lang.Integer excludeScanDirectoryListID,
           java.lang.Integer excludeScanFileExtListID,
           java.lang.Integer excludeScanFileListID,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareFilesToScan fileToScan,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction firstScanAction,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareFoldersToScan folderToScan,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanAction scanAction,
           boolean intelliTrapEnabled,
           boolean scanCompressed,
           java.lang.Integer scanCompressedLayer,
           java.lang.Integer scanCompressedSmaller,
           java.lang.Integer scanCompressedNumberOfFiles,
           java.lang.Integer scanDirList,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanFilesActivity scanFilesActivity,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction secondScanAction,
           java.lang.Integer toScanFileExtListID,
           boolean spywareEnabled,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanCustomActionForGeneric,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction unScannableFileAction,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareConfigType configurationType,
           boolean scanNetworkFolder,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareCpuUsage cpuUsage,
           boolean scanOLE,
           boolean scanOLEExploit,
           java.lang.Integer scanOLELayer,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForVirus,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForTrojans,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForPacker,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForSpyware,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForOtherThreats,
           com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForCookie,
           java.lang.Integer excludeScanProcessFileListID) {
        super(
            ID,
            description,
            name);
        this.alert = alert;
        this.excludeScanDirectoryListID = excludeScanDirectoryListID;
        this.excludeScanFileExtListID = excludeScanFileExtListID;
        this.excludeScanFileListID = excludeScanFileListID;
        this.fileToScan = fileToScan;
        this.firstScanAction = firstScanAction;
        this.folderToScan = folderToScan;
        this.scanAction = scanAction;
        this.intelliTrapEnabled = intelliTrapEnabled;
        this.scanCompressed = scanCompressed;
        this.scanCompressedLayer = scanCompressedLayer;
        this.scanCompressedSmaller = scanCompressedSmaller;
        this.scanCompressedNumberOfFiles = scanCompressedNumberOfFiles;
        this.scanDirList = scanDirList;
        this.scanFilesActivity = scanFilesActivity;
        this.secondScanAction = secondScanAction;
        this.toScanFileExtListID = toScanFileExtListID;
        this.spywareEnabled = spywareEnabled;
        this.scanCustomActionForGeneric = scanCustomActionForGeneric;
        this.unScannableFileAction = unScannableFileAction;
        this.configurationType = configurationType;
        this.scanNetworkFolder = scanNetworkFolder;
        this.cpuUsage = cpuUsage;
        this.scanOLE = scanOLE;
        this.scanOLEExploit = scanOLEExploit;
        this.scanOLELayer = scanOLELayer;
        this.scanActionForVirus = scanActionForVirus;
        this.scanActionForTrojans = scanActionForTrojans;
        this.scanActionForPacker = scanActionForPacker;
        this.scanActionForSpyware = scanActionForSpyware;
        this.scanActionForOtherThreats = scanActionForOtherThreats;
        this.scanActionForCookie = scanActionForCookie;
        this.excludeScanProcessFileListID = excludeScanProcessFileListID;
    }


    /**
     * Gets the alert value for this AntiMalwareTransport.
     * 
     * @return alert
     */
    public boolean isAlert() {
        return alert;
    }


    /**
     * Sets the alert value for this AntiMalwareTransport.
     * 
     * @param alert
     */
    public void setAlert(boolean alert) {
        this.alert = alert;
    }


    /**
     * Gets the excludeScanDirectoryListID value for this AntiMalwareTransport.
     * 
     * @return excludeScanDirectoryListID
     */
    public java.lang.Integer getExcludeScanDirectoryListID() {
        return excludeScanDirectoryListID;
    }


    /**
     * Sets the excludeScanDirectoryListID value for this AntiMalwareTransport.
     * 
     * @param excludeScanDirectoryListID
     */
    public void setExcludeScanDirectoryListID(java.lang.Integer excludeScanDirectoryListID) {
        this.excludeScanDirectoryListID = excludeScanDirectoryListID;
    }


    /**
     * Gets the excludeScanFileExtListID value for this AntiMalwareTransport.
     * 
     * @return excludeScanFileExtListID
     */
    public java.lang.Integer getExcludeScanFileExtListID() {
        return excludeScanFileExtListID;
    }


    /**
     * Sets the excludeScanFileExtListID value for this AntiMalwareTransport.
     * 
     * @param excludeScanFileExtListID
     */
    public void setExcludeScanFileExtListID(java.lang.Integer excludeScanFileExtListID) {
        this.excludeScanFileExtListID = excludeScanFileExtListID;
    }


    /**
     * Gets the excludeScanFileListID value for this AntiMalwareTransport.
     * 
     * @return excludeScanFileListID
     */
    public java.lang.Integer getExcludeScanFileListID() {
        return excludeScanFileListID;
    }


    /**
     * Sets the excludeScanFileListID value for this AntiMalwareTransport.
     * 
     * @param excludeScanFileListID
     */
    public void setExcludeScanFileListID(java.lang.Integer excludeScanFileListID) {
        this.excludeScanFileListID = excludeScanFileListID;
    }


    /**
     * Gets the fileToScan value for this AntiMalwareTransport.
     * 
     * @return fileToScan
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareFilesToScan getFileToScan() {
        return fileToScan;
    }


    /**
     * Sets the fileToScan value for this AntiMalwareTransport.
     * 
     * @param fileToScan
     */
    public void setFileToScan(com.trendmicro.webserviceclient.generated.EnumAntiMalwareFilesToScan fileToScan) {
        this.fileToScan = fileToScan;
    }


    /**
     * Gets the firstScanAction value for this AntiMalwareTransport.
     * 
     * @return firstScanAction
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getFirstScanAction() {
        return firstScanAction;
    }


    /**
     * Sets the firstScanAction value for this AntiMalwareTransport.
     * 
     * @param firstScanAction
     */
    public void setFirstScanAction(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction firstScanAction) {
        this.firstScanAction = firstScanAction;
    }


    /**
     * Gets the folderToScan value for this AntiMalwareTransport.
     * 
     * @return folderToScan
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareFoldersToScan getFolderToScan() {
        return folderToScan;
    }


    /**
     * Sets the folderToScan value for this AntiMalwareTransport.
     * 
     * @param folderToScan
     */
    public void setFolderToScan(com.trendmicro.webserviceclient.generated.EnumAntiMalwareFoldersToScan folderToScan) {
        this.folderToScan = folderToScan;
    }


    /**
     * Gets the scanAction value for this AntiMalwareTransport.
     * 
     * @return scanAction
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanAction getScanAction() {
        return scanAction;
    }


    /**
     * Sets the scanAction value for this AntiMalwareTransport.
     * 
     * @param scanAction
     */
    public void setScanAction(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanAction scanAction) {
        this.scanAction = scanAction;
    }


    /**
     * Gets the intelliTrapEnabled value for this AntiMalwareTransport.
     * 
     * @return intelliTrapEnabled
     */
    public boolean isIntelliTrapEnabled() {
        return intelliTrapEnabled;
    }


    /**
     * Sets the intelliTrapEnabled value for this AntiMalwareTransport.
     * 
     * @param intelliTrapEnabled
     */
    public void setIntelliTrapEnabled(boolean intelliTrapEnabled) {
        this.intelliTrapEnabled = intelliTrapEnabled;
    }


    /**
     * Gets the scanCompressed value for this AntiMalwareTransport.
     * 
     * @return scanCompressed
     */
    public boolean isScanCompressed() {
        return scanCompressed;
    }


    /**
     * Sets the scanCompressed value for this AntiMalwareTransport.
     * 
     * @param scanCompressed
     */
    public void setScanCompressed(boolean scanCompressed) {
        this.scanCompressed = scanCompressed;
    }


    /**
     * Gets the scanCompressedLayer value for this AntiMalwareTransport.
     * 
     * @return scanCompressedLayer
     */
    public java.lang.Integer getScanCompressedLayer() {
        return scanCompressedLayer;
    }


    /**
     * Sets the scanCompressedLayer value for this AntiMalwareTransport.
     * 
     * @param scanCompressedLayer
     */
    public void setScanCompressedLayer(java.lang.Integer scanCompressedLayer) {
        this.scanCompressedLayer = scanCompressedLayer;
    }


    /**
     * Gets the scanCompressedSmaller value for this AntiMalwareTransport.
     * 
     * @return scanCompressedSmaller
     */
    public java.lang.Integer getScanCompressedSmaller() {
        return scanCompressedSmaller;
    }


    /**
     * Sets the scanCompressedSmaller value for this AntiMalwareTransport.
     * 
     * @param scanCompressedSmaller
     */
    public void setScanCompressedSmaller(java.lang.Integer scanCompressedSmaller) {
        this.scanCompressedSmaller = scanCompressedSmaller;
    }


    /**
     * Gets the scanCompressedNumberOfFiles value for this AntiMalwareTransport.
     * 
     * @return scanCompressedNumberOfFiles
     */
    public java.lang.Integer getScanCompressedNumberOfFiles() {
        return scanCompressedNumberOfFiles;
    }


    /**
     * Sets the scanCompressedNumberOfFiles value for this AntiMalwareTransport.
     * 
     * @param scanCompressedNumberOfFiles
     */
    public void setScanCompressedNumberOfFiles(java.lang.Integer scanCompressedNumberOfFiles) {
        this.scanCompressedNumberOfFiles = scanCompressedNumberOfFiles;
    }


    /**
     * Gets the scanDirList value for this AntiMalwareTransport.
     * 
     * @return scanDirList
     */
    public java.lang.Integer getScanDirList() {
        return scanDirList;
    }


    /**
     * Sets the scanDirList value for this AntiMalwareTransport.
     * 
     * @param scanDirList
     */
    public void setScanDirList(java.lang.Integer scanDirList) {
        this.scanDirList = scanDirList;
    }


    /**
     * Gets the scanFilesActivity value for this AntiMalwareTransport.
     * 
     * @return scanFilesActivity
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanFilesActivity getScanFilesActivity() {
        return scanFilesActivity;
    }


    /**
     * Sets the scanFilesActivity value for this AntiMalwareTransport.
     * 
     * @param scanFilesActivity
     */
    public void setScanFilesActivity(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanFilesActivity scanFilesActivity) {
        this.scanFilesActivity = scanFilesActivity;
    }


    /**
     * Gets the secondScanAction value for this AntiMalwareTransport.
     * 
     * @return secondScanAction
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getSecondScanAction() {
        return secondScanAction;
    }


    /**
     * Sets the secondScanAction value for this AntiMalwareTransport.
     * 
     * @param secondScanAction
     */
    public void setSecondScanAction(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction secondScanAction) {
        this.secondScanAction = secondScanAction;
    }


    /**
     * Gets the toScanFileExtListID value for this AntiMalwareTransport.
     * 
     * @return toScanFileExtListID
     */
    public java.lang.Integer getToScanFileExtListID() {
        return toScanFileExtListID;
    }


    /**
     * Sets the toScanFileExtListID value for this AntiMalwareTransport.
     * 
     * @param toScanFileExtListID
     */
    public void setToScanFileExtListID(java.lang.Integer toScanFileExtListID) {
        this.toScanFileExtListID = toScanFileExtListID;
    }


    /**
     * Gets the spywareEnabled value for this AntiMalwareTransport.
     * 
     * @return spywareEnabled
     */
    public boolean isSpywareEnabled() {
        return spywareEnabled;
    }


    /**
     * Sets the spywareEnabled value for this AntiMalwareTransport.
     * 
     * @param spywareEnabled
     */
    public void setSpywareEnabled(boolean spywareEnabled) {
        this.spywareEnabled = spywareEnabled;
    }


    /**
     * Gets the scanCustomActionForGeneric value for this AntiMalwareTransport.
     * 
     * @return scanCustomActionForGeneric
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getScanCustomActionForGeneric() {
        return scanCustomActionForGeneric;
    }


    /**
     * Sets the scanCustomActionForGeneric value for this AntiMalwareTransport.
     * 
     * @param scanCustomActionForGeneric
     */
    public void setScanCustomActionForGeneric(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanCustomActionForGeneric) {
        this.scanCustomActionForGeneric = scanCustomActionForGeneric;
    }


    /**
     * Gets the unScannableFileAction value for this AntiMalwareTransport.
     * 
     * @return unScannableFileAction
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getUnScannableFileAction() {
        return unScannableFileAction;
    }


    /**
     * Sets the unScannableFileAction value for this AntiMalwareTransport.
     * 
     * @param unScannableFileAction
     */
    public void setUnScannableFileAction(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction unScannableFileAction) {
        this.unScannableFileAction = unScannableFileAction;
    }


    /**
     * Gets the configurationType value for this AntiMalwareTransport.
     * 
     * @return configurationType
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareConfigType getConfigurationType() {
        return configurationType;
    }


    /**
     * Sets the configurationType value for this AntiMalwareTransport.
     * 
     * @param configurationType
     */
    public void setConfigurationType(com.trendmicro.webserviceclient.generated.EnumAntiMalwareConfigType configurationType) {
        this.configurationType = configurationType;
    }


    /**
     * Gets the scanNetworkFolder value for this AntiMalwareTransport.
     * 
     * @return scanNetworkFolder
     */
    public boolean isScanNetworkFolder() {
        return scanNetworkFolder;
    }


    /**
     * Sets the scanNetworkFolder value for this AntiMalwareTransport.
     * 
     * @param scanNetworkFolder
     */
    public void setScanNetworkFolder(boolean scanNetworkFolder) {
        this.scanNetworkFolder = scanNetworkFolder;
    }


    /**
     * Gets the cpuUsage value for this AntiMalwareTransport.
     * 
     * @return cpuUsage
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareCpuUsage getCpuUsage() {
        return cpuUsage;
    }


    /**
     * Sets the cpuUsage value for this AntiMalwareTransport.
     * 
     * @param cpuUsage
     */
    public void setCpuUsage(com.trendmicro.webserviceclient.generated.EnumAntiMalwareCpuUsage cpuUsage) {
        this.cpuUsage = cpuUsage;
    }


    /**
     * Gets the scanOLE value for this AntiMalwareTransport.
     * 
     * @return scanOLE
     */
    public boolean isScanOLE() {
        return scanOLE;
    }


    /**
     * Sets the scanOLE value for this AntiMalwareTransport.
     * 
     * @param scanOLE
     */
    public void setScanOLE(boolean scanOLE) {
        this.scanOLE = scanOLE;
    }


    /**
     * Gets the scanOLEExploit value for this AntiMalwareTransport.
     * 
     * @return scanOLEExploit
     */
    public boolean isScanOLEExploit() {
        return scanOLEExploit;
    }


    /**
     * Sets the scanOLEExploit value for this AntiMalwareTransport.
     * 
     * @param scanOLEExploit
     */
    public void setScanOLEExploit(boolean scanOLEExploit) {
        this.scanOLEExploit = scanOLEExploit;
    }


    /**
     * Gets the scanOLELayer value for this AntiMalwareTransport.
     * 
     * @return scanOLELayer
     */
    public java.lang.Integer getScanOLELayer() {
        return scanOLELayer;
    }


    /**
     * Sets the scanOLELayer value for this AntiMalwareTransport.
     * 
     * @param scanOLELayer
     */
    public void setScanOLELayer(java.lang.Integer scanOLELayer) {
        this.scanOLELayer = scanOLELayer;
    }


    /**
     * Gets the scanActionForVirus value for this AntiMalwareTransport.
     * 
     * @return scanActionForVirus
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getScanActionForVirus() {
        return scanActionForVirus;
    }


    /**
     * Sets the scanActionForVirus value for this AntiMalwareTransport.
     * 
     * @param scanActionForVirus
     */
    public void setScanActionForVirus(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForVirus) {
        this.scanActionForVirus = scanActionForVirus;
    }


    /**
     * Gets the scanActionForTrojans value for this AntiMalwareTransport.
     * 
     * @return scanActionForTrojans
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getScanActionForTrojans() {
        return scanActionForTrojans;
    }


    /**
     * Sets the scanActionForTrojans value for this AntiMalwareTransport.
     * 
     * @param scanActionForTrojans
     */
    public void setScanActionForTrojans(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForTrojans) {
        this.scanActionForTrojans = scanActionForTrojans;
    }


    /**
     * Gets the scanActionForPacker value for this AntiMalwareTransport.
     * 
     * @return scanActionForPacker
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getScanActionForPacker() {
        return scanActionForPacker;
    }


    /**
     * Sets the scanActionForPacker value for this AntiMalwareTransport.
     * 
     * @param scanActionForPacker
     */
    public void setScanActionForPacker(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForPacker) {
        this.scanActionForPacker = scanActionForPacker;
    }


    /**
     * Gets the scanActionForSpyware value for this AntiMalwareTransport.
     * 
     * @return scanActionForSpyware
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getScanActionForSpyware() {
        return scanActionForSpyware;
    }


    /**
     * Sets the scanActionForSpyware value for this AntiMalwareTransport.
     * 
     * @param scanActionForSpyware
     */
    public void setScanActionForSpyware(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForSpyware) {
        this.scanActionForSpyware = scanActionForSpyware;
    }


    /**
     * Gets the scanActionForOtherThreats value for this AntiMalwareTransport.
     * 
     * @return scanActionForOtherThreats
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getScanActionForOtherThreats() {
        return scanActionForOtherThreats;
    }


    /**
     * Sets the scanActionForOtherThreats value for this AntiMalwareTransport.
     * 
     * @param scanActionForOtherThreats
     */
    public void setScanActionForOtherThreats(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForOtherThreats) {
        this.scanActionForOtherThreats = scanActionForOtherThreats;
    }


    /**
     * Gets the scanActionForCookie value for this AntiMalwareTransport.
     * 
     * @return scanActionForCookie
     */
    public com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction getScanActionForCookie() {
        return scanActionForCookie;
    }


    /**
     * Sets the scanActionForCookie value for this AntiMalwareTransport.
     * 
     * @param scanActionForCookie
     */
    public void setScanActionForCookie(com.trendmicro.webserviceclient.generated.EnumAntiMalwareScanCustomAction scanActionForCookie) {
        this.scanActionForCookie = scanActionForCookie;
    }


    /**
     * Gets the excludeScanProcessFileListID value for this AntiMalwareTransport.
     * 
     * @return excludeScanProcessFileListID
     */
    public java.lang.Integer getExcludeScanProcessFileListID() {
        return excludeScanProcessFileListID;
    }


    /**
     * Sets the excludeScanProcessFileListID value for this AntiMalwareTransport.
     * 
     * @param excludeScanProcessFileListID
     */
    public void setExcludeScanProcessFileListID(java.lang.Integer excludeScanProcessFileListID) {
        this.excludeScanProcessFileListID = excludeScanProcessFileListID;
    }

    private java.lang.Object __equalsCalc = null;
    public synchronized boolean equals(java.lang.Object obj) {
        if (!(obj instanceof AntiMalwareTransport)) return false;
        AntiMalwareTransport other = (AntiMalwareTransport) obj;
        if (obj == null) return false;
        if (this == obj) return true;
        if (__equalsCalc != null) {
            return (__equalsCalc == obj);
        }
        __equalsCalc = obj;
        boolean _equals;
        _equals = super.equals(obj) && 
            this.alert == other.isAlert() &&
            ((this.excludeScanDirectoryListID==null && other.getExcludeScanDirectoryListID()==null) || 
             (this.excludeScanDirectoryListID!=null &&
              this.excludeScanDirectoryListID.equals(other.getExcludeScanDirectoryListID()))) &&
            ((this.excludeScanFileExtListID==null && other.getExcludeScanFileExtListID()==null) || 
             (this.excludeScanFileExtListID!=null &&
              this.excludeScanFileExtListID.equals(other.getExcludeScanFileExtListID()))) &&
            ((this.excludeScanFileListID==null && other.getExcludeScanFileListID()==null) || 
             (this.excludeScanFileListID!=null &&
              this.excludeScanFileListID.equals(other.getExcludeScanFileListID()))) &&
            ((this.fileToScan==null && other.getFileToScan()==null) || 
             (this.fileToScan!=null &&
              this.fileToScan.equals(other.getFileToScan()))) &&
            ((this.firstScanAction==null && other.getFirstScanAction()==null) || 
             (this.firstScanAction!=null &&
              this.firstScanAction.equals(other.getFirstScanAction()))) &&
            ((this.folderToScan==null && other.getFolderToScan()==null) || 
             (this.folderToScan!=null &&
              this.folderToScan.equals(other.getFolderToScan()))) &&
            ((this.scanAction==null && other.getScanAction()==null) || 
             (this.scanAction!=null &&
              this.scanAction.equals(other.getScanAction()))) &&
            this.intelliTrapEnabled == other.isIntelliTrapEnabled() &&
            this.scanCompressed == other.isScanCompressed() &&
            ((this.scanCompressedLayer==null && other.getScanCompressedLayer()==null) || 
             (this.scanCompressedLayer!=null &&
              this.scanCompressedLayer.equals(other.getScanCompressedLayer()))) &&
            ((this.scanCompressedSmaller==null && other.getScanCompressedSmaller()==null) || 
             (this.scanCompressedSmaller!=null &&
              this.scanCompressedSmaller.equals(other.getScanCompressedSmaller()))) &&
            ((this.scanCompressedNumberOfFiles==null && other.getScanCompressedNumberOfFiles()==null) || 
             (this.scanCompressedNumberOfFiles!=null &&
              this.scanCompressedNumberOfFiles.equals(other.getScanCompressedNumberOfFiles()))) &&
            ((this.scanDirList==null && other.getScanDirList()==null) || 
             (this.scanDirList!=null &&
              this.scanDirList.equals(other.getScanDirList()))) &&
            ((this.scanFilesActivity==null && other.getScanFilesActivity()==null) || 
             (this.scanFilesActivity!=null &&
              this.scanFilesActivity.equals(other.getScanFilesActivity()))) &&
            ((this.secondScanAction==null && other.getSecondScanAction()==null) || 
             (this.secondScanAction!=null &&
              this.secondScanAction.equals(other.getSecondScanAction()))) &&
            ((this.toScanFileExtListID==null && other.getToScanFileExtListID()==null) || 
             (this.toScanFileExtListID!=null &&
              this.toScanFileExtListID.equals(other.getToScanFileExtListID()))) &&
            this.spywareEnabled == other.isSpywareEnabled() &&
            ((this.scanCustomActionForGeneric==null && other.getScanCustomActionForGeneric()==null) || 
             (this.scanCustomActionForGeneric!=null &&
              this.scanCustomActionForGeneric.equals(other.getScanCustomActionForGeneric()))) &&
            ((this.unScannableFileAction==null && other.getUnScannableFileAction()==null) || 
             (this.unScannableFileAction!=null &&
              this.unScannableFileAction.equals(other.getUnScannableFileAction()))) &&
            ((this.configurationType==null && other.getConfigurationType()==null) || 
             (this.configurationType!=null &&
              this.configurationType.equals(other.getConfigurationType()))) &&
            this.scanNetworkFolder == other.isScanNetworkFolder() &&
            ((this.cpuUsage==null && other.getCpuUsage()==null) || 
             (this.cpuUsage!=null &&
              this.cpuUsage.equals(other.getCpuUsage()))) &&
            this.scanOLE == other.isScanOLE() &&
            this.scanOLEExploit == other.isScanOLEExploit() &&
            ((this.scanOLELayer==null && other.getScanOLELayer()==null) || 
             (this.scanOLELayer!=null &&
              this.scanOLELayer.equals(other.getScanOLELayer()))) &&
            ((this.scanActionForVirus==null && other.getScanActionForVirus()==null) || 
             (this.scanActionForVirus!=null &&
              this.scanActionForVirus.equals(other.getScanActionForVirus()))) &&
            ((this.scanActionForTrojans==null && other.getScanActionForTrojans()==null) || 
             (this.scanActionForTrojans!=null &&
              this.scanActionForTrojans.equals(other.getScanActionForTrojans()))) &&
            ((this.scanActionForPacker==null && other.getScanActionForPacker()==null) || 
             (this.scanActionForPacker!=null &&
              this.scanActionForPacker.equals(other.getScanActionForPacker()))) &&
            ((this.scanActionForSpyware==null && other.getScanActionForSpyware()==null) || 
             (this.scanActionForSpyware!=null &&
              this.scanActionForSpyware.equals(other.getScanActionForSpyware()))) &&
            ((this.scanActionForOtherThreats==null && other.getScanActionForOtherThreats()==null) || 
             (this.scanActionForOtherThreats!=null &&
              this.scanActionForOtherThreats.equals(other.getScanActionForOtherThreats()))) &&
            ((this.scanActionForCookie==null && other.getScanActionForCookie()==null) || 
             (this.scanActionForCookie!=null &&
              this.scanActionForCookie.equals(other.getScanActionForCookie()))) &&
            ((this.excludeScanProcessFileListID==null && other.getExcludeScanProcessFileListID()==null) || 
             (this.excludeScanProcessFileListID!=null &&
              this.excludeScanProcessFileListID.equals(other.getExcludeScanProcessFileListID())));
        __equalsCalc = null;
        return _equals;
    }

    private boolean __hashCodeCalc = false;
    public synchronized int hashCode() {
        if (__hashCodeCalc) {
            return 0;
        }
        __hashCodeCalc = true;
        int _hashCode = super.hashCode();
        _hashCode += (isAlert() ? Boolean.TRUE : Boolean.FALSE).hashCode();
        if (getExcludeScanDirectoryListID() != null) {
            _hashCode += getExcludeScanDirectoryListID().hashCode();
        }
        if (getExcludeScanFileExtListID() != null) {
            _hashCode += getExcludeScanFileExtListID().hashCode();
        }
        if (getExcludeScanFileListID() != null) {
            _hashCode += getExcludeScanFileListID().hashCode();
        }
        if (getFileToScan() != null) {
            _hashCode += getFileToScan().hashCode();
        }
        if (getFirstScanAction() != null) {
            _hashCode += getFirstScanAction().hashCode();
        }
        if (getFolderToScan() != null) {
            _hashCode += getFolderToScan().hashCode();
        }
        if (getScanAction() != null) {
            _hashCode += getScanAction().hashCode();
        }
        _hashCode += (isIntelliTrapEnabled() ? Boolean.TRUE : Boolean.FALSE).hashCode();
        _hashCode += (isScanCompressed() ? Boolean.TRUE : Boolean.FALSE).hashCode();
        if (getScanCompressedLayer() != null) {
            _hashCode += getScanCompressedLayer().hashCode();
        }
        if (getScanCompressedSmaller() != null) {
            _hashCode += getScanCompressedSmaller().hashCode();
        }
        if (getScanCompressedNumberOfFiles() != null) {
            _hashCode += getScanCompressedNumberOfFiles().hashCode();
        }
        if (getScanDirList() != null) {
            _hashCode += getScanDirList().hashCode();
        }
        if (getScanFilesActivity() != null) {
            _hashCode += getScanFilesActivity().hashCode();
        }
        if (getSecondScanAction() != null) {
            _hashCode += getSecondScanAction().hashCode();
        }
        if (getToScanFileExtListID() != null) {
            _hashCode += getToScanFileExtListID().hashCode();
        }
        _hashCode += (isSpywareEnabled() ? Boolean.TRUE : Boolean.FALSE).hashCode();
        if (getScanCustomActionForGeneric() != null) {
            _hashCode += getScanCustomActionForGeneric().hashCode();
        }
        if (getUnScannableFileAction() != null) {
            _hashCode += getUnScannableFileAction().hashCode();
        }
        if (getConfigurationType() != null) {
            _hashCode += getConfigurationType().hashCode();
        }
        _hashCode += (isScanNetworkFolder() ? Boolean.TRUE : Boolean.FALSE).hashCode();
        if (getCpuUsage() != null) {
            _hashCode += getCpuUsage().hashCode();
        }
        _hashCode += (isScanOLE() ? Boolean.TRUE : Boolean.FALSE).hashCode();
        _hashCode += (isScanOLEExploit() ? Boolean.TRUE : Boolean.FALSE).hashCode();
        if (getScanOLELayer() != null) {
            _hashCode += getScanOLELayer().hashCode();
        }
        if (getScanActionForVirus() != null) {
            _hashCode += getScanActionForVirus().hashCode();
        }
        if (getScanActionForTrojans() != null) {
            _hashCode += getScanActionForTrojans().hashCode();
        }
        if (getScanActionForPacker() != null) {
            _hashCode += getScanActionForPacker().hashCode();
        }
        if (getScanActionForSpyware() != null) {
            _hashCode += getScanActionForSpyware().hashCode();
        }
        if (getScanActionForOtherThreats() != null) {
            _hashCode += getScanActionForOtherThreats().hashCode();
        }
        if (getScanActionForCookie() != null) {
            _hashCode += getScanActionForCookie().hashCode();
        }
        if (getExcludeScanProcessFileListID() != null) {
            _hashCode += getExcludeScanProcessFileListID().hashCode();
        }
        __hashCodeCalc = false;
        return _hashCode;
    }

    // Type metadata
    private static org.apache.axis.description.TypeDesc typeDesc =
        new org.apache.axis.description.TypeDesc(AntiMalwareTransport.class, true);

    static {
        typeDesc.setXmlType(new javax.xml.namespace.QName("urn:Manager", "AntiMalwareTransport"));
        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("alert");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "alert"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("excludeScanDirectoryListID");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "excludeScanDirectoryListID"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("excludeScanFileExtListID");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "excludeScanFileExtListID"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("excludeScanFileListID");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "excludeScanFileListID"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("fileToScan");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "fileToScan"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareFilesToScan"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("firstScanAction");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "firstScanAction"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("folderToScan");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "folderToScan"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareFoldersToScan"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanAction");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanAction"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("intelliTrapEnabled");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "intelliTrapEnabled"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanCompressed");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanCompressed"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanCompressedLayer");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanCompressedLayer"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanCompressedSmaller");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanCompressedSmaller"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanCompressedNumberOfFiles");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanCompressedNumberOfFiles"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanDirList");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanDirList"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanFilesActivity");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanFilesActivity"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanFilesActivity"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("secondScanAction");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "secondScanAction"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("toScanFileExtListID");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "toScanFileExtListID"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("spywareEnabled");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "spywareEnabled"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanCustomActionForGeneric");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanCustomActionForGeneric"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("unScannableFileAction");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "unScannableFileAction"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("configurationType");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "configurationType"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareConfigType"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanNetworkFolder");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanNetworkFolder"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cpuUsage");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "cpuUsage"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareCpuUsage"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanOLE");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanOLE"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanOLEExploit");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanOLEExploit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanOLELayer");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanOLELayer"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanActionForVirus");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanActionForVirus"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanActionForTrojans");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanActionForTrojans"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanActionForPacker");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanActionForPacker"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanActionForSpyware");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanActionForSpyware"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanActionForOtherThreats");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanActionForOtherThreats"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scanActionForCookie");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "scanActionForCookie"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:Manager", "EnumAntiMalwareScanCustomAction"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("excludeScanProcessFileListID");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:Manager", "excludeScanProcessFileListID"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
    }

    /**
     * Return type metadata object
     */
    public static org.apache.axis.description.TypeDesc getTypeDesc() {
        return typeDesc;
    }

    /**
     * Get Custom Serializer
     */
    public static org.apache.axis.encoding.Serializer getSerializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanSerializer(
            _javaType, _xmlType, typeDesc);
    }

    /**
     * Get Custom Deserializer
     */
    public static org.apache.axis.encoding.Deserializer getDeserializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanDeserializer(
            _javaType, _xmlType, typeDesc);
    }

}
